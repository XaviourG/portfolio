/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Model(props) {
  const { nodes, materials } = useGLTF("/software_engineer_3d.gltf");
  const colorMap = useTexture('/circuit_texture.jpg');

  const meshRef = React.useRef();

  useFrame(({ clock }) => {
    const a = clock.getElapsedTime();
    meshRef.current.rotation.z = a/2;
  });

  return (
    <group {...props} dispose={null}>
      <mesh ref={meshRef}
        castShadow
        receiveShadow
        position={[0, 0, 0]}
        rotation={[1.4,0.1,0.25]}
        geometry={nodes.Text.geometry}
        material={nodes.Text.material}
      >
      <meshStandardMaterial
        map={colorMap}
      />
      </mesh>
    </group>
  );
}

useGLTF.preload("/software_engineer_3d.gltf");